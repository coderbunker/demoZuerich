--
-- PostgreSQL database cluster dump
--

SET default_transaction_read_only = off;

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

--
-- Roles
--

CREATE ROLE "ATLAS-AI";
ALTER ROLE "ATLAS-AI" WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB NOLOGIN NOREPLICATION NOBYPASSRLS VALID UNTIL 'infinity';
CREATE ROLE alessandro_pg;
ALTER ROLE alessandro_pg WITH NOSUPERUSER INHERIT NOCREATEROLE CREATEDB LOGIN NOREPLICATION NOBYPASSRLS VALID UNTIL 'infinity';
CREATE ROLE postgres;
ALTER ROLE postgres WITH SUPERUSER INHERIT CREATEROLE CREATEDB LOGIN REPLICATION BYPASSRLS PASSWORD 'md549deab6f68597968a68e9c70af5dd1e6' VALID UNTIL 'infinity';
CREATE ROLE ricky_ng;
ALTER ROLE ricky_ng WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS VALID UNTIL 'infinity';
CREATE ROLE sheryl_bg;
ALTER ROLE sheryl_bg WITH NOSUPERUSER INHERIT NOCREATEROLE NOCREATEDB LOGIN NOREPLICATION NOBYPASSRLS VALID UNTIL 'infinity';


--
-- Role memberships
--

GRANT "ATLAS-AI" TO alessandro_pg GRANTED BY postgres;
GRANT "ATLAS-AI" TO postgres GRANTED BY postgres;
GRANT "ATLAS-AI" TO ricky_ng GRANTED BY postgres;




--
-- Database creation
--

CREATE DATABASE atlasai WITH TEMPLATE = template0 OWNER = alessandro_pg;
CREATE DATABASE broker_rabbitmq WITH TEMPLATE = template0 OWNER = postgres;
REVOKE ALL ON DATABASE broker_rabbitmq FROM PUBLIC;
REVOKE ALL ON DATABASE broker_rabbitmq FROM postgres;
GRANT ALL ON DATABASE broker_rabbitmq TO postgres;
GRANT CONNECT,TEMPORARY ON DATABASE broker_rabbitmq TO PUBLIC;
GRANT ALL ON DATABASE broker_rabbitmq TO "ATLAS-AI" WITH GRANT OPTION;
CREATE DATABASE node_red WITH TEMPLATE = template0 OWNER = alessandro_pg;
REVOKE ALL ON DATABASE node_red FROM PUBLIC;
REVOKE ALL ON DATABASE node_red FROM alessandro_pg;
GRANT ALL ON DATABASE node_red TO alessandro_pg;
GRANT CONNECT,TEMPORARY ON DATABASE node_red TO PUBLIC;
GRANT ALL ON DATABASE node_red TO "ATLAS-AI" WITH GRANT OPTION;
REVOKE ALL ON DATABASE template1 FROM PUBLIC;
REVOKE ALL ON DATABASE template1 FROM postgres;
GRANT ALL ON DATABASE template1 TO postgres;
GRANT CONNECT ON DATABASE template1 TO PUBLIC;


\connect atlasai

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.9
-- Dumped by pg_dump version 9.5.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: atlas; Type: SCHEMA; Schema: -; Owner: alessandro_pg
--

CREATE SCHEMA atlas;


ALTER SCHEMA atlas OWNER TO alessandro_pg;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = atlas, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: arduino; Type: TABLE; Schema: atlas; Owner: alessandro_pg
--

CREATE TABLE arduino (
    temparatur "char" NOT NULL,
    name "char"
);


ALTER TABLE arduino OWNER TO alessandro_pg;

--
-- Name: test2; Type: TABLE; Schema: atlas; Owner: alessandro_pg
--

CREATE TABLE test2 (
    geschwindigkeit "char"
);


ALTER TABLE test2 OWNER TO alessandro_pg;

SET search_path = public, pg_catalog;

--
-- Name: arduino; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE arduino (
    id integer NOT NULL,
    temparatur character varying(255),
    geschwindigkeit character varying(255)
);


ALTER TABLE arduino OWNER TO postgres;

SET search_path = atlas, pg_catalog;

--
-- Data for Name: arduino; Type: TABLE DATA; Schema: atlas; Owner: alessandro_pg
--

COPY arduino (temparatur, name) FROM stdin;
\.


--
-- Data for Name: test2; Type: TABLE DATA; Schema: atlas; Owner: alessandro_pg
--

COPY test2 (geschwindigkeit) FROM stdin;
\.


SET search_path = public, pg_catalog;

--
-- Data for Name: arduino; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY arduino (id, temparatur, geschwindigkeit) FROM stdin;
1	25	\N
3	\N	\N
4	\N	\N
\.


SET search_path = atlas, pg_catalog;

--
-- Name: ard_id; Type: CONSTRAINT; Schema: atlas; Owner: alessandro_pg
--

ALTER TABLE ONLY arduino
    ADD CONSTRAINT ard_id PRIMARY KEY (temparatur);


--
-- Name: atlas; Type: ACL; Schema: -; Owner: alessandro_pg
--

REVOKE ALL ON SCHEMA atlas FROM PUBLIC;
REVOKE ALL ON SCHEMA atlas FROM alessandro_pg;
GRANT ALL ON SCHEMA atlas TO alessandro_pg;
GRANT ALL ON SCHEMA atlas TO "ATLAS-AI" WITH GRANT OPTION;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect broker_rabbitmq

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.9
-- Dumped by pg_dump version 9.5.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: broker_rabbitmq; Type: SCHEMA; Schema: -; Owner: alessandro_pg
--

CREATE SCHEMA broker_rabbitmq;


ALTER SCHEMA broker_rabbitmq OWNER TO alessandro_pg;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect node_red

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.9
-- Dumped by pg_dump version 9.5.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: node_red; Type: SCHEMA; Schema: -; Owner: alessandro_pg
--

CREATE SCHEMA node_red;


ALTER SCHEMA node_red OWNER TO alessandro_pg;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect postgres

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.9
-- Dumped by pg_dump version 9.5.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: adminpack; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS adminpack WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION adminpack; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION adminpack IS 'administrative functions for PostgreSQL';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

\connect template1

SET default_transaction_read_only = off;

--
-- PostgreSQL database dump
--

-- Dumped from database version 9.5.9
-- Dumped by pg_dump version 9.5.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: template1; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE template1 IS 'default template for new databases';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

--
-- PostgreSQL database cluster dump complete
--

